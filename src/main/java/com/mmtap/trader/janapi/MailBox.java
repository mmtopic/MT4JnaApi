package com.mmtap.trader.janapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:1355</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public abstract class MailBox extends Structure {
	/** Conversion Error : time_t (Primitive without known type for this runtime: NativeTime) */
	/** mail sender (login) */
	public int sender;
	/**
	 * mail sender (name)<br>
	 * C type : char[64]
	 */
	public byte[] from = new byte[64];
	/** mail recipient */
	public int to;
	/**
	 * mail sumbect<br>
	 * C type : char[128]
	 */
	public byte[] subject = new byte[128];
	/** readed flag */
	public int readed;
	/**
	 * pointer to mail body<br>
	 * C type : char*
	 */
	public Pointer body;
	/** mail body length */
	public int bodylen;
	/** minimum build */
	public short build_min;
	/** maximum build */
	public short build_max;
	/** reserved */
	public int reserved;
	public MailBox() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("sender", "from", "to", "subject", "readed", "body", "bodylen", "build_min", "build_max", "reserved");
	}
	public MailBox(Pointer peer) {
		super(peer);
	}
	public static abstract class ByReference extends MailBox implements Structure.ByReference {
		
	};
	public static abstract class ByValue extends MailBox implements Structure.ByValue {
		
	};
}
