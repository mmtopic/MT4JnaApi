package com.mmtap.trader.janapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:610</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public abstract class ConSync extends Structure {
	/**
	 * name (address<br>
	 * C type : char[64]
	 */
	public byte[] server = new byte[64];
	/** port */
	public int unusedport;
	/**
	 * for future use-login<br>
	 * C type : char[32]
	 */
	public byte[] login = new byte[32];
	/**
	 * for future use=password<br>
	 * C type : char[32]
	 */
	public byte[] password = new byte[32];
	/** enable sychronization */
	public int enable;
	/** synchronization mode: HB_ADD,HB_UPDATE,HB_INSERT */
	public int mode;
	/** Conversion Error : time_t (Primitive without known type for this runtime: NativeTime) */
	/** Conversion Error : time_t (Primitive without known type for this runtime: NativeTime) */
	/**
	 * symbols list<br>
	 * C type : char[1024]
	 */
	public byte[] securities = new byte[1024];
	/** time correction in minutes */
	public int timecorrection;
	/**
	 * reserved<br>
	 * C type : int[13]
	 */
	public int[] reserved = new int[13];
	/**
	 * internal (do not use)<br>
	 * C type : ConSync*
	 */
	public ConSync.ByReference next;
	public ConSync() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("server", "unusedport", "login", "password", "enable", "mode", "securities", "timecorrection", "reserved", "next");
	}
	public ConSync(Pointer peer) {
		super(peer);
	}
	public static abstract class ByReference extends ConSync implements Structure.ByReference {
		
	};
	public static abstract class ByValue extends ConSync implements Structure.ByValue {
		
	};
}
