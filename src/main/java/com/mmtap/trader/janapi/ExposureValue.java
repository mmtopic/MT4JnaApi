package com.mmtap.trader.janapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:1308</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ExposureValue extends Structure {
	/**
	 * currency<br>
	 * C type : char[4]
	 */
	public byte[] currency = new byte[4];
	/** clients volume */
	public double clients;
	/** coverage volume */
	public double coverage;
	public ExposureValue() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("currency", "clients", "coverage");
	}
	/**
	 * @param currency currency<br>
	 * C type : char[4]<br>
	 * @param clients clients volume<br>
	 * @param coverage coverage volume
	 */
	public ExposureValue(byte currency[], double clients, double coverage) {
		super();
		if ((currency.length != this.currency.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.currency = currency;
		this.clients = clients;
		this.coverage = coverage;
	}
	public ExposureValue(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ExposureValue implements Structure.ByReference {
		
	};
	public static class ByValue extends ExposureValue implements Structure.ByValue {
		
	};
}
