package com.mmtap.trader.janapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:887</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public abstract class PerformanceInfo extends Structure {
	/** Conversion Error : time_t (Primitive without known type for this runtime: NativeTime) */
	/** online users */
	public short users;
	/** processor loading (%) */
	public short cpu;
	/** free memory (Kb) */
	public int freemem;
	/** network activity (Kb/s) */
	public int network;
	/** all open sockets in system */
	public int sockets;
	public PerformanceInfo() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("users", "cpu", "freemem", "network", "sockets");
	}
	/**
	 * @param users online users<br>
	 * @param cpu processor loading (%)<br>
	 * @param freemem free memory (Kb)<br>
	 * @param network network activity (Kb/s)<br>
	 * @param sockets all open sockets in system
	 */
	public PerformanceInfo(short users, short cpu, int freemem, int network, int sockets) {
		super();
		this.users = users;
		this.cpu = cpu;
		this.freemem = freemem;
		this.network = network;
		this.sockets = sockets;
	}
	public PerformanceInfo(Pointer peer) {
		super(peer);
	}
	public static abstract class ByReference extends PerformanceInfo implements Structure.ByReference {
		
	};
	public static abstract class ByValue extends PerformanceInfo implements Structure.ByValue {
		
	};
}
