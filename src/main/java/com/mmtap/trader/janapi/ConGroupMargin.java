package com.mmtap.trader.janapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:274</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ConGroupMargin extends Structure {
	/**
	 * security<br>
	 * C type : char[12]
	 */
	public byte[] symbol = new byte[12];
	/** swap size for long and short positions */
	public double swap_long;
	/** swap size for long and short positions */
	public double swap_short;
	/** margin divider */
	public double margin_divider;
	/** C type : int[7] */
	public int[] reserved = new int[7];
	public ConGroupMargin() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("symbol", "swap_long", "swap_short", "margin_divider", "reserved");
	}
	/**
	 * @param symbol security<br>
	 * C type : char[12]<br>
	 * @param swap_long swap size for long and short positions<br>
	 * @param swap_short swap size for long and short positions<br>
	 * @param margin_divider margin divider<br>
	 * @param reserved C type : int[7]
	 */
	public ConGroupMargin(byte symbol[], double swap_long, double swap_short, double margin_divider, int reserved[]) {
		super();
		if ((symbol.length != this.symbol.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.symbol = symbol;
		this.swap_long = swap_long;
		this.swap_short = swap_short;
		this.margin_divider = margin_divider;
		if ((reserved.length != this.reserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.reserved = reserved;
	}
	public ConGroupMargin(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ConGroupMargin implements Structure.ByReference {
		
	};
	public static class ByValue extends ConGroupMargin implements Structure.ByValue {
		
	};
}
