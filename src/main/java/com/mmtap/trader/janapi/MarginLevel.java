package com.mmtap.trader.janapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:1156</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class MarginLevel extends Structure {
	/** user login */
	public int login;
	/**
	 * user group<br>
	 * C type : char[16]
	 */
	public byte[] group = new byte[16];
	/** user leverage */
	public int leverage;
	/** (internal) */
	public int updated;
	/** balance+credit */
	public double balance;
	/** equity */
	public double equity;
	/** lots */
	public int volume;
	/** margin requirements */
	public double margin;
	/** free margin */
	public double margin_free;
	/** margin level */
	public double margin_level;
	/** margin controlling type (percent/currency) */
	public int margin_type;
	/** level type(ok/margincall/stopout) */
	public int level_type;
	public MarginLevel() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("login", "group", "leverage", "updated", "balance", "equity", "volume", "margin", "margin_free", "margin_level", "margin_type", "level_type");
	}
	public MarginLevel(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends MarginLevel implements Structure.ByReference {
		
	};
	public static class ByValue extends MarginLevel implements Structure.ByValue {
		
	};
}
