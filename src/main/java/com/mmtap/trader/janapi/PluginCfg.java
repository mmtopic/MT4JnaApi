package com.mmtap.trader.janapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:641</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PluginCfg extends Structure {
	/**
	 * parameter name<br>
	 * C type : char[32]
	 */
	public byte[] name = new byte[32];
	/**
	 * parameter value<br>
	 * C type : char[128]
	 */
	public byte[] value = new byte[128];
	/**
	 * reserved<br>
	 * C type : int[16]
	 */
	public int[] reserved = new int[16];
	public PluginCfg() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("name", "value", "reserved");
	}
	/**
	 * @param name parameter name<br>
	 * C type : char[32]<br>
	 * @param value parameter value<br>
	 * C type : char[128]<br>
	 * @param reserved reserved<br>
	 * C type : int[16]
	 */
	public PluginCfg(byte name[], byte value[], int reserved[]) {
		super();
		if ((name.length != this.name.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.name = name;
		if ((value.length != this.value.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.value = value;
		if ((reserved.length != this.reserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.reserved = reserved;
	}
	public PluginCfg(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PluginCfg implements Structure.ByReference {
		
	};
	public static class ByValue extends PluginCfg implements Structure.ByValue {
		
	};
}
