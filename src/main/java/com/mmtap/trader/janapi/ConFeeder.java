package com.mmtap.trader.janapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:221</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ConFeeder extends Structure {
	/**
	 * name<br>
	 * C type : char[64]
	 */
	public byte[] name = new byte[64];
	/**
	 * datafeed filename<br>
	 * C type : char[256]
	 */
	public byte[] file = new byte[256];
	/**
	 * server address<br>
	 * C type : char[64]
	 */
	public byte[] server = new byte[64];
	/**
	 * datafeed login<br>
	 * C type : char[32]
	 */
	public byte[] login = new byte[32];
	/**
	 * datafeed password<br>
	 * C type : char[32]
	 */
	public byte[] pass = new byte[32];
	/**
	 * keywords (news filtration)<br>
	 * C type : char[256]
	 */
	public byte[] keywords = new byte[256];
	/** enable feeder */
	public int enable;
	/** datafeed mode-enumeration FEED_QUOTES, FEED_NEWS, FEED_QUOTESNEWS */
	public int mode;
	/** max. freeze time (default ~120 sec.) */
	public int timeout;
	/** reconnect timeout before attemps_sleep connect attempts (default ~ 5  sec) */
	public int timeout_reconnect;
	/** reconnect timeout after attemps_sleep connect attempts  (default ~ 60 sec) */
	public int timeout_sleep;
	/** reconnect count (see timeout_reconnect & timeout_sleep) */
	public int attemps_sleep;
	/** news language id */
	public int news_langid;
	/**
	 * reserved<br>
	 * C type : int[33]
	 */
	public int[] unused = new int[33];
	public ConFeeder() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("name", "file", "server", "login", "pass", "keywords", "enable", "mode", "timeout", "timeout_reconnect", "timeout_sleep", "attemps_sleep", "news_langid", "unused");
	}
	public ConFeeder(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ConFeeder implements Structure.ByReference {
		
	};
	public static class ByValue extends ConFeeder implements Structure.ByValue {
		
	};
}
