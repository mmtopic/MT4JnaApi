package com.mmtap.trader.janapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:998</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class OnlineRecord extends Structure {
	/** connections counter */
	public int counter;
	/** reserved */
	public int reserved;
	/** user login */
	public int login;
	/** connection ip address */
	public int ip;
	/**
	 * user group<br>
	 * C type : char[16]
	 */
	public byte[] group = new byte[16];
	public OnlineRecord() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("counter", "reserved", "login", "ip", "group");
	}
	/**
	 * @param counter connections counter<br>
	 * @param reserved reserved<br>
	 * @param login user login<br>
	 * @param ip connection ip address<br>
	 * @param group user group<br>
	 * C type : char[16]
	 */
	public OnlineRecord(int counter, int reserved, int login, int ip, byte group[]) {
		super();
		this.counter = counter;
		this.reserved = reserved;
		this.login = login;
		this.ip = ip;
		if ((group.length != this.group.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.group = group;
	}
	public OnlineRecord(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends OnlineRecord implements Structure.ByReference {
		
	};
	public static class ByValue extends OnlineRecord implements Structure.ByValue {
		
	};
}
