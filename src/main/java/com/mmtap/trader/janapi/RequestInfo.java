package com.mmtap.trader.janapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:1176</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class RequestInfo extends Structure {
	/** request id */
	public int id;
	/** request status */
	public byte status;
	/** request time */
	public int time;
	/** manager processing request (if any) */
	public int manager;
	/** user login */
	public int login;
	/**
	 * user group<br>
	 * C type : char[16]
	 */
	public byte[] group = new byte[16];
	/** user balance */
	public double balance;
	/** user credit */
	public double credit;
	/**
	 * bid/ask<br>
	 * C type : double[2]
	 */
	public double[] prices = new double[2];
	/**
	 * trade transaction<br>
	 * C type : TradeTransInfo
	 */
	public TradeTransInfo trade;
	/** gateway order volume */
	public int gw_volume;
	/** gateway order ticket */
	public int gw_order;
	/** gateway order price deviation (pips) from request price */
	public short gw_price;
	/** C type : RequestInfo* */
	public RequestInfo.ByReference prev;
	/**
	 * (internal use)<br>
	 * C type : RequestInfo*
	 */
	public RequestInfo.ByReference next;
	public RequestInfo() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("id", "status", "time", "manager", "login", "group", "balance", "credit", "prices", "trade", "gw_volume", "gw_order", "gw_price", "prev", "next");
	}
	public RequestInfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends RequestInfo implements Structure.ByReference {
		
	};
	public static class ByValue extends RequestInfo implements Structure.ByValue {
		
	};
}
