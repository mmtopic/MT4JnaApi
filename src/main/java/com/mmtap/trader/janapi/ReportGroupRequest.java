package com.mmtap.trader.janapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:1238</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public abstract class ReportGroupRequest extends Structure {
	/**
	 * request group name<br>
	 * C type : char[32]
	 */
	public byte[] name = new byte[32];
	/** Conversion Error : time_t (Primitive without known type for this runtime: NativeTime) */
	/** Conversion Error : time_t (Primitive without known type for this runtime: NativeTime) */
	/** total logins in request group */
	public int total;
	public ReportGroupRequest() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("name", "total");
	}
	/**
	 * @param name request group name<br>
	 * C type : char[32]<br>
	 * @param total total logins in request group
	 */
	public ReportGroupRequest(byte name[], int total) {
		super();
		if ((name.length != this.name.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.name = name;
		this.total = total;
	}
	public ReportGroupRequest(Pointer peer) {
		super(peer);
	}
	public static abstract class ByReference extends ReportGroupRequest implements Structure.ByReference {
		
	};
	public static abstract class ByValue extends ReportGroupRequest implements Structure.ByValue {
		
	};
}
