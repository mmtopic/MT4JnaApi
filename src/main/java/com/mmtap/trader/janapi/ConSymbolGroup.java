package com.mmtap.trader.janapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:602</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ConSymbolGroup extends Structure {
	/**
	 * group name<br>
	 * C type : char[16]
	 */
	public byte[] name = new byte[16];
	/**
	 * group description<br>
	 * C type : char[64]
	 */
	public byte[] description = new byte[64];
	public ConSymbolGroup() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("name", "description");
	}
	/**
	 * @param name group name<br>
	 * C type : char[16]<br>
	 * @param description group description<br>
	 * C type : char[64]
	 */
	public ConSymbolGroup(byte name[], byte description[]) {
		super();
		if ((name.length != this.name.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.name = name;
		if ((description.length != this.description.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.description = description;
	}
	public ConSymbolGroup(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ConSymbolGroup implements Structure.ByReference {
		
	};
	public static class ByValue extends ConSymbolGroup implements Structure.ByValue {
		
	};
}
