package com.mmtap.trader.janapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:1215</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public abstract class DailyReport extends Structure {
	/** login */
	public int login;
	/** Conversion Error : time_t (Primitive without known type for this runtime: NativeTime) */
	/**
	 * group<br>
	 * C type : char[16]
	 */
	public byte[] group = new byte[16];
	/**
	 * bank<br>
	 * C type : char[64]
	 */
	public byte[] bank = new byte[64];
	/** previous balance */
	public double balance_prev;
	/** balance */
	public double balance;
	/** deposit */
	public double deposit;
	/** credit */
	public double credit;
	/** closed profit/loss */
	public double profit_closed;
	/** floating profit/loss */
	public double profit;
	/** equity */
	public double equity;
	/** used margin */
	public double margin;
	/** free margin */
	public double margin_free;
	/** (internal) */
	public int next;
	/**
	 * reserved<br>
	 * C type : int[3]
	 */
	public int[] reserved = new int[3];
	public DailyReport() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("login", "group", "bank", "balance_prev", "balance", "deposit", "credit", "profit_closed", "profit", "equity", "margin", "margin_free", "next", "reserved");
	}
	public DailyReport(Pointer peer) {
		super(peer);
	}
	public static abstract class ByReference extends DailyReport implements Structure.ByReference {
		
	};
	public static abstract class ByValue extends DailyReport implements Structure.ByValue {
		
	};
}
